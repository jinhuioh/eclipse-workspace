/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-04-26 06:20:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class statistics_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<script src=\"https://d3js.org/d3.v3.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/d3.layout.cloud.js\"></script>\r\n");
      out.write("<head>\r\n");
      out.write("<title>통계</title>\r\n");
      out.write("<!-- 통계 페이지에서는 d3.js를 사용하여 온라인 쇼핑몰에 관해 word cloud와 radar chart를 보여줍니다 -->\r\n");
      out.write("<link rel = \"stylesheet\" type = \"text/css\" href = \"resources/css/statistics.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1 style=\"margin:150px; margin-top: 150px;\">통계</h1>\r\n");
      out.write("<div id=\"top\">");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("</div>\r\n");
      out.write("<div id=\"chart\" class=\"chart\">\r\n");
      out.write("	<script>\r\n");
      out.write("		var frequency_list = [{\"text\":\"리브드 사이클링 쇼츠\",\"size\":20},{\"text\":\"리브드 탑\",\"size\":43},{\"text\":\"쇼트 트윌 스커트\",\"size\":20},{\"text\": \"오버사이즈 데님 재킷\",\"size\":32},{\"text\":\"오버사이즈 리넨 블렌드 재킷\",\"size\":20},{\"text\":\"와이드 하이웨이스트 진\",\"size\":20},{\"text\":\"집업 스웨트셔츠\",\"size\":20},{\"text\":\"카고 팬츠\",\"size\":70},{\"text\":\"컷아웃 재킷 드레스\",\"size\":46},{\"text\":\"코튼 크롭트 셔츠\",\"size\":20},{\"text\":\"크롭트 가디건\",\"size\":21}];\r\n");
      out.write("		var color = d3.scale.linear()\r\n");
      out.write("	            .domain([0,1,2,3,4,5,6,10,15,20,100])\r\n");
      out.write("	            .range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\r\n");
      out.write("	\r\n");
      out.write("	    d3.layout.cloud().size([800, 300])\r\n");
      out.write("	            .words(frequency_list)\r\n");
      out.write("	            .rotate(0)\r\n");
      out.write("	            .fontSize(function(d) { return d.size; })\r\n");
      out.write("	            .on(\"end\", draw)\r\n");
      out.write("	            .start();\r\n");
      out.write("	\r\n");
      out.write("	    function draw(words) {\r\n");
      out.write("	        d3.select(\"body\").append(\"svg\")\r\n");
      out.write("	                .attr(\"width\", 850)\r\n");
      out.write("	                .attr(\"height\", 500)\r\n");
      out.write("	                .attr(\"class\", \"wordcloud\")\r\n");
      out.write("	                .append(\"g\")\r\n");
      out.write("	                // without the transform, words words would get cutoff to the left and top, they would\r\n");
      out.write("	                // appear outside of the SVG area\r\n");
      out.write("	                .attr(\"transform\", \"translate(320,200)\")\r\n");
      out.write("	                .selectAll(\"text\")\r\n");
      out.write("	                .data(words)\r\n");
      out.write("	                .enter().append(\"text\")\r\n");
      out.write("	                .style(\"font-size\", function(d) { return d.size + \"px\"; })\r\n");
      out.write("	                .style(\"fill\", function(d, i) { return color(i); })\r\n");
      out.write("	                .attr(\"transform\", function(d) {\r\n");
      out.write("	                    return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\r\n");
      out.write("	                })\r\n");
      out.write("	                .text(function(d) { return d.text; });\r\n");
      out.write("	    }\r\n");
      out.write("	</script>\r\n");
      out.write("<div class=\"chart\" style=\"float: right; width: 60%; margin:0 auto;\">\r\n");
      out.write("	<canvas id=\"radar-chart\" width=\"400\" height=\"400\"></canvas>\r\n");
      out.write("</div>\r\n");
      out.write("	<script>\r\n");
      out.write("	new Chart(document.getElementById(\"radar-chart\"), {\r\n");
      out.write("	    type: 'radar',\r\n");
      out.write("	    data: {\r\n");
      out.write("	      labels: [\"주변인\", \"패션매장\", \"인터넷\", \"스트리트 패션\", \"TV 방송\"],\r\n");
      out.write("	      datasets: [\r\n");
      out.write("	        {\r\n");
      out.write("	          label: \"고소득\",\r\n");
      out.write("	          fill: true,\r\n");
      out.write("	          backgroundColor: \"rgba(179,181,198,0.2)\",\r\n");
      out.write("	          borderColor: \"rgba(179,181,198,1)\",\r\n");
      out.write("	          pointBorderColor: \"#fff\",\r\n");
      out.write("	          pointBackgroundColor: \"rgba(179,181,198,1)\",\r\n");
      out.write("	          data: [35.8,39.4,35.6,22.3,16.0]\r\n");
      out.write("	        }, {\r\n");
      out.write("	          label: \"중소득\",\r\n");
      out.write("	          fill: true,\r\n");
      out.write("	          backgroundColor: \"rgba(255,99,132,0.2)\",\r\n");
      out.write("	          borderColor: \"rgba(255,99,132,1)\",\r\n");
      out.write("	          pointBorderColor: \"#fff\",\r\n");
      out.write("	          pointBackgroundColor: \"rgba(255,99,132,1)\",\r\n");
      out.write("	          pointBorderColor: \"#fff\",\r\n");
      out.write("	          data: [40.2,33.8,35.1,27.5,22.0]\r\n");
      out.write("	        }, {\r\n");
      out.write("	            label: \"저소득\",\r\n");
      out.write("	            fill: true,\r\n");
      out.write("	            backgroundColor: \"rgba(255,192,0,0.2)\",\r\n");
      out.write("	            borderColor: \"rgba(255,192,0,1)\",\r\n");
      out.write("	            pointBorderColor: \"#fff\",\r\n");
      out.write("	            pointBackgroundColor: \"rgba(255,192,0,1)\",\r\n");
      out.write("	            pointBorderColor: \"#fff\",\r\n");
      out.write("	            data: [52.0,33.1,20.2,34.2,32.1]\r\n");
      out.write("	          }\r\n");
      out.write("	      ]\r\n");
      out.write("	    },\r\n");
      out.write("	    options: {\r\n");
      out.write("			responsive: false,\r\n");
      out.write("			scales: {\r\n");
      out.write("				yAxes: [{\r\n");
      out.write("					ticks: {\r\n");
      out.write("						beginAtZero: true\r\n");
      out.write("					}\r\n");
      out.write("				}]\r\n");
      out.write("			},\r\n");
      out.write("	      title: {\r\n");
      out.write("	        display: true,\r\n");
      out.write("	        text: '소득 계층별 2021년 상반기 패션 정보원'\r\n");
      out.write("	      }\r\n");
      out.write("	    }\r\n");
      out.write("	});\r\n");
      out.write("	</script>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
